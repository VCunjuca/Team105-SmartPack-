#include "mcc_generated_files/mcc.h"
#include "mcc_generated_files/examples/i2c1_master_example.h"
#include <xc.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <math.h>
#include <string.h>
#include "LCD.h"
#include "LCD4Bit.h"

//ADC Variables
uint16_t distance;
int ir_dist = 900;
//float feet;
int feet;

//Cap Variables
uint8_t compared_val_0;
uint8_t compared_val_1;
uint8_t compared_val_2;
uint8_t compared_val_3;
uint8_t compared_val_4;
uint8_t compared_val_5;
int cap_min = 90;
int cap_max = 200;

//LCD Variables
struct LCD theLCD;

//ADC ISR
void ISR_1(void)
{
        compared_val_0 = I2C1_Read1ByteRegister(0x28, 0x10);        
        compared_val_1 = I2C1_Read1ByteRegister(0x28, 0x11);
        compared_val_2 = I2C1_Read1ByteRegister(0x28, 0x12);
        compared_val_3 = I2C1_Read1ByteRegister(0x28, 0x13);
        compared_val_4 = I2C1_Read1ByteRegister(0x28, 0x14);
        compared_val_5 = I2C1_Read1ByteRegister(0x28, 0x15);
        
       //ISR Logic
       if (compared_val_0 > cap_min && compared_val_0 < cap_max)
            {
            LCD_LED_SetHigh();
            }
        /*
        else if (compared_val_1 > cap_min && compared_val_1 < cap_max)
            {
            LCD_LED_SetHigh();
            }    
        else if (compared_val_2 > cap_min && compared_val_2 < cap_max)
            {
            LCD_LED_SetHigh();
            }    
        else if (compared_val_3 > cap_min && compared_val_3 < cap_max)
            {
            LCD_LED_SetHigh();
            }    
        else if (compared_val_4 > cap_min && compared_val_4 < cap_max)
            {
            LCD_LED_SetHigh();
            }    
        else if (compared_val_5 > cap_min && compared_val_5 < cap_max)
            {
            LCD_LED_SetHigh();
            }
          */       
}

void main(void)
{
   SYSTEM_Initialize();
   ADC_Initialize();
   EUSART1_Initialize();
   I2C1_Initialize();
   
   INTERRUPT_GlobalInterruptEnable();
   INTERRUPT_PeripheralInterruptEnable();
   
   //SENSITIVITY CONTROL REGISTER
   I2C1_Write1ByteRegister(0x28, 0x1F, 0b00100000);

    while (1)
    {
        distance = ADC_GetConversion(ADC);
        distance = distance >> 6;
        
        //ESP32
        feet = distance;//*.0004;
        //printf("feet:%f\r", feet);
        printf("feet: %u\r",feet);
        
            if (distance > ir_dist)
            {
            Motor_LED_SetHigh();
            __delay_ms(500);
            Motor_LED_SetLow();
            __delay_ms(500);
            ISR_1();
            
            }
            else if (distance < ir_dist)
            {
            Motor_LED_SetLow();
            }       
    }
}
